
{
  "entities": {
    "Event": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Event",
      "type": "object",
      "description": "Represents an event in the EventChain system.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Name of the event."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the event."
        },
        "date": {
          "type": "string",
          "description": "Date of the event.",
          "format": "date"
        },
        "category": {
          "type": "string",
          "description": "Category of the event (e.g., Tech, Business, Education, Art)."
        },
        "participantCount": {
          "type": "number",
          "description": "The number of participants registered for the event."
        }
      },
      "required": [
        "title",
        "description",
        "date",
        "category",
        "participantCount"
      ]
    },
    "Participant": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Participant",
      "type": "object",
      "description": "Represents a user's registration for an event, including certificate status.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the participant."
        },
        "email": {
          "type": "string",
          "description": "Email address of the participant.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the participant."
        },
        "organization": {
          "type": "string",
          "description": "Organization the participant belongs to."
        },
        "jobTitle": {
          "type": "string",
          "description": "Job title or role of the participant."
        },
        "eventId": {
          "type": "string",
          "description": "Reference to the Event this registration is for."
        },
        "certificateStatus": {
          "type": "string",
          "description": "Status of the certificate for this participant.",
          "enum": [
            "Not Sent",
            "Sent",
            "Failed"
          ]
        }
      },
      "required": [
        "name",
        "email",
        "phone",
        "eventId",
        "certificateStatus"
      ]
    },
    "Certificate": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Certificate",
      "type": "object",
      "description": "Represents a certificate issued for an event participant.",
      "properties": {
        "eventId": {
          "type": "string",
          "description": "Reference to Event. (Relationship: Event 1:N Certificate)"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User (Participant). (Relationship: User 1:N Certificate)"
        },
        "templateId": {
          "type": "string",
          "description": "Reference to CertificateTemplate."
        },
        "issueDate": {
          "type": "string",
          "description": "Date and time when the certificate was issued.",
          "format": "date-time"
        },
        "web3Hash": {
          "type": "string",
          "description": "Unique hash for Web3 verification of the certificate."
        },
        "deliveryMethod": {
          "type": "string",
          "description": "Method used to deliver the certificate (e.g., email, WhatsApp)."
        },
        "deliveryStatus": {
          "type": "string",
          "description": "Status of the certificate delivery (e.g., Sent, Failed)."
        }
      },
      "required": [
        "eventId",
        "userId",
        "templateId",
        "issueDate",
        "web3Hash",
        "deliveryMethod",
        "deliveryStatus"
      ]
    },
    "CertificateTemplate": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CertificateTemplate",
      "type": "object",
      "description": "Represents a template for generating certificates.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the certificate template entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the certificate template (e.g., Classic, Modern, Web3 Verifiable)."
        },
        "description": {
          "type": "string",
          "description": "Description of the certificate template."
        },
        "fields": {
          "type": "array",
          "description": "List of fields included in the template (e.g., Name, Event Name, Date, Issuer).",
          "items": {
            "type": "string"
          }
        },
        "templateFile": {
          "type": "string",
          "description": "File path or URL to the actual template file (e.g., HTML, PDF)."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "fields",
        "templateFile"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/events/{eventId}",
        "definition": {
          "entityName": "Event",
          "schema": {
            "$ref": "#/entities/Event"
          },
          "description": "Stores event details. Events are accessible at the root level to enable easy listing. ",
          "params": [
            {
              "name": "eventId",
              "description": "Unique identifier for the event."
            }
          ]
        }
      },
      {
        "path": "/participants/{participantId}",
        "definition": {
          "entityName": "Participant",
          "schema": {
            "$ref": "#/entities/Participant"
          },
          "description": "Stores participant registration and certificate status information for all events.",
          "params": [
            {
              "name": "participantId",
              "description": "Unique identifier for the participant entry."
            }
          ]
        }
      },
      {
        "path": "/certificates/{certificateId}",
        "definition": {
          "entityName": "Certificate",
          "schema": {
            "$ref": "#/entities/Certificate"
          },
          "description": "Stores certificate data. The certificateId is stored at the root level to be easily queriable.",
          "params": [
            {
              "name": "certificateId",
              "description": "Unique identifier for the certificate."
            }
          ]
        }
      },
      {
        "path": "/certificateTemplates/{certificateTemplateId}",
        "definition": {
          "entityName": "CertificateTemplate",
          "schema": {
            "$ref": "#/entities/CertificateTemplate"
          },
          "description": "Stores certificate template designs.",
          "params": [
            {
              "name": "certificateTemplateId",
              "description": "Unique identifier for the certificate template."
            }
          ]
        }
      }
    ]
  }
}

    